Version=2.52
IconFile=
NumberOfModules=0
Package=b4a.example
DoNotOverwriteManifest=False
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="14"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
UserTypesHint=
NumberOfFiles=1
File1=Layout.bal
NumberOfLibraries=3
Library1=core
Library2=randomaccessfile
Library3=usb
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Arduino ADK Example
	#VersionCode: 1
	#VersionName: 1
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region

Sub Process_Globals
	'These global variables will be declared once when the application starts.
	'These variables can be accessed from all modules.
	Dim USBman As UsbManager
	Dim ADK As UsbAccessory
	Dim AStream As AsyncStreams
	
	Dim ConnectEnabled As Boolean
	Dim MessageCount As Long
End Sub

Sub Globals
	'These global variables will be redeclared each time the activity is created.
	'These variables can only be accessed from this module.
	Dim BtnConnect As Button
	Dim BtnSend As Button
	Dim BtnExit As Button
End Sub

Sub Activity_Create(FirstTime As Boolean)
	'Do not forget to load the layout file created with the visual designer. For example:
	If FirstTime Then
		ConnectEnabled = True 'only allow Connect once
	End If
	Activity.LoadLayout("Layout")
	BtnConnect.Enabled = ConnectEnabled
End Sub

Sub Activity_Resume
End Sub

Sub Activity_Pause (UserClosed As Boolean)
End Sub

Sub AStream_NewData (Buffer() As Byte)
    Dim msg As String
    msg = BytesToString(Buffer, 0, Buffer.Length, "UTF8")
    Log(msg)
End Sub

Sub AStream_Error
    ToastMessageShow(LastException.Message, True)
End Sub

Sub BtnConnect_Click
	Dim Accs() As UsbAccessory
	USBman.Initialize
	Accs = USBman.GetAccessories
	If Accs.Length > 0 Then
		ADK = Accs(0)
		If Not(USBman.HasAccessoryPermission(ADK)) Then
			USBman.RequestAccessoryPermission(ADK) ' this is not a modal dialog so the the code will run on
		Else			
			USBman.OpenAccessory(ADK) 
			AStream.Initialize(ADK.InputStream, ADK.OutputStream, "AStream")
			BtnConnect.Enabled = False
			ConnectEnabled = False
		End If
	End If	
End Sub

Sub BtnSend_Click
	MessageCount = MessageCount + 1
	Dim bytes() As Byte = ("Test string number " & MessageCount & CRLF).GetBytes("UTF8")
	AStream.Write(bytes)
End Sub


Sub BtnExit_Click
	AStream.Close
	ADK.Close	
	ExitApplication	
End Sub